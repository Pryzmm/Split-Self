plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation 'org.xerial:sqlite-jdbc:3.45.1.0'
	include 'org.xerial:sqlite-jdbc:3.45.1.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    include 'com.google.code.gson:gson:2.10.1'

    modImplementation "maven.modrinth:architectury-api:13.0.6+fabric"
    modImplementation "maven.modrinth:shriek:1.1.1+fabric"

    modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {}
}